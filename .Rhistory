library(metafor)
library(orchaRd)
library(tidyverse)
library(brms)
library(modelr)
library(tidybayes)
library(bayesplot)
library(rstan)
library(ggridges)
library(patchwork)
data <- read.csv("Final data.csv")
str(data)
data <- read_csv("Final data.csv") %>%
mutate_all(c(study,experiment,group,effect), as.factor())
data <- read_csv("Final data.csv") %>%
mutate_all(c(study,experiment,group,effect), as.factor)
data <- read_csv("Final data.csv") %>%
mutate(across(2:8, as.factor))
data <- read_csv("Final data.csv") %>%
mutate_at(c(study,experiment,group,effect), as.factor)
View(data)
data <- read.csv("Final data.csv")
data <- read_csv("Final data.csv")
data <- read_csv("Final data.csv") %>%
mutate_at(c("study","experiment","group","effect"), as.factor)
str(data)
data <- read_csv("Final data.csv") %>%
mutate_at(c(2:8), as.factor)
str(data)
data <- read_csv("Final data.csv") %>%
mutate_at(c(2:8,30:32,34:37), as.factor)
str(data)
library(janitor)
renv::install("janitor")
renv::snapshot()
data <- read_csv("Final data.csv") %>%
mutate_at(c(2:8,30:32,34:37), as.factor) %>%
clean_names()
library(janitor)
data <- read_csv("Final data.csv") %>%
mutate_at(c(2:8,30:32,34:37), as.factor) %>%
clean_names()
renv::install("targets")
renv::install("tarchetypes")
targets::tar_visnetwork()
targets::tar_visnetwork()
targets::tar_visnetwork()
targets::tar_visnetwork()
targets::tar_visnetwork()
##### Effect sizes
### For effects where increase is good
data_increase <- subset(data, Improvement == "Increase")
### For effects where increase is good
data_increase <- subset(data, improvement == "Increase")
# Calculate pre-post control effect sizes
data_increase_ppc <-
subset(data_increase, study_design == "between")
data_increase_ppc_st <- escalc(
measure = "SMCR",
m1i = post_m_st,
m2i = pre_m_st,
sd1i = pre_sd_pool,
ni = n_st,
ri = ri,
data = data_increase_ppc
)
data$pre_sd_pool <-
sqrt(((data$n_st - 1) * data$pre_sd_st ^ 2 + (data$n_con - 1) * data$pre_sd_con ^
2
) / (data$n_st + data$n_con - 2))
data$post_sd_pool <-
sqrt(((data$n_st - 1) * data$post_sd_st ^ 2 + (data$n_con - 1) * data$post_sd_con ^
2
) / (data$n_st + data$n_con - 2))
### For effects where increase is good
data_increase <- subset(data, improvement == "Increase")
# Calculate pre-post control effect sizes
data_increase_ppc <-
subset(data_increase, study_design == "between")
data_increase_ppc_st <- escalc(
measure = "SMCR",
m1i = post_m_st,
m2i = pre_m_st,
sd1i = pre_sd_pool,
ni = n_st,
ri = ri,
data = data_increase_ppc
)
data_increase_ppc_con <- escalc(
measure = "SMCR",
m1i = post_m_con,
m2i = pre_m_con,
sd1i = pre_sd_pool,
ni = n_con,
ri = ri,
data = data_increase_ppc
)
data$ri <- 0.7
data$pre_sd_pool <-
sqrt(((data$n_st - 1) * data$pre_sd_st ^ 2 + (data$n_con - 1) * data$pre_sd_con ^
2
) / (data$n_st + data$n_con - 2))
data$post_sd_pool <-
sqrt(((data$n_st - 1) * data$post_sd_st ^ 2 + (data$n_con - 1) * data$post_sd_con ^
2
) / (data$n_st + data$n_con - 2))
### For effects where increase is good
data_increase <- subset(data, improvement == "Increase")
# Calculate pre-post control effect sizes
data_increase_ppc <-
subset(data_increase, study_design == "between")
data_increase_ppc_st <- escalc(
measure = "SMCR",
m1i = post_m_st,
m2i = pre_m_st,
sd1i = pre_sd_pool,
ni = n_st,
ri = ri,
data = data_increase_ppc
)
data_increase_ppc_con <- escalc(
measure = "SMCR",
m1i = post_m_con,
m2i = pre_m_con,
sd1i = pre_sd_pool,
ni = n_con,
ri = ri,
data = data_increase_ppc
)
data_increase_ppc$yi <-
(data_increase_ppc_st$yi - data_increase_ppc_con$yi)
data_increase_ppc$vi <-
(data_increase_ppc_st$vi + data_increase_ppc_con$vi)
# Calculate post only effect sizes
data_increase_post <-
subset(data_increase, study_design == "between-post")
data_increase_post$post_sd_st <-
replmiss(data_increase_post$post_sd_st,
with(data_increase_post, post_sd_con))
data_increase_post <- escalc(
measure = "SMD",
m1i = post_m_st,
m2i = post_m_con,
sd1i = post_sd_pool,
n1i = n_st,
n2i = n_con,
data = data_increase_post
)
data_increase_post <- escalc(
measure = "SMD",
m1i = post_m_st,
m2i = post_m_con,
sd1i = post_sd_st,
sd2i = post_sd_con,
n1i = n_st,
n2i = n_con,
data = data_increase_post
)
# Calculate pre-post effect sizes
data_increase_pp <-
subset(data_increase, study_design == "pre-post")
data_increase_pp <- escalc(
measure = "SMCR",
m1i = post_m_st,
m2i = pre_m_st,
sd1i = pre_sd_st,
ni = n_st,
ri = ri,
data = data_increase_pp
)
### For effects where decrease is good
data_decrease <- subset(data, improvement == "Decrease")
# Calculate pre-post control effect sizes
data_decrease_ppc <-
subset(data_decrease, study_design == "between")
data_decrease_ppc_st <- escalc(
measure = "SMCR",
m1i = pre_m_st,
m2i = post_m_st,
sd1i = pre_sd_pool,
ni = n_st,
ri = ri,
data = data_decrease_ppc
)
data_decrease_ppc_con <- escalc(
measure = "SMCR",
m1i = pre_m_con,
m2i = post_m_con,
sd1i = pre_sd_pool,
ni = n_con,
ri = ri,
data = data_decrease_ppc
)
data_decrease_ppc$yi <-
(data_decrease_ppc_st$yi - data_decrease_ppc_con$yi)
data_decrease_ppc$vi <-
(data_decrease_ppc_st$vi + data_decrease_ppc_con$vi)
# Calculate post only effect sizes
data_decrease_post <-
subset(data_decrease, study_design == "between-post")
data_decrease_post$post_sd_st <-
replmiss(data_decrease_post$post_sd_st,
with(data_decrease_post, post_sd_con))
data_decrease_post <- escalc(
measure = "SMD",
m1i = post_m_con,
m2i = post_m_st,
sd1i = post_sd_pool,
n1i = n_con,
n2i = n_st,
data = data_decrease_post
)
data_decrease_post <- escalc(
measure = "SMD",
m1i = post_m_con,
m2i = post_m_st,
sd1i = post_sd_st,
sd2i = post_sd_con,
n1i = n_con,
n2i = n_st,
data = data_decrease_post
)
# Calculate pre-post effect sizes
data_decrease_pp <-
subset(data_decrease, study_design == "pre-post")
data_decrease_pp <- escalc(
measure = "SMCR",
m1i = pre_m_st,
m2i = post_m_st,
sd1i = pre_sd_st,
ni = n_st,
ri = ri,
data = data_decrease_pp
)
### Combine all data
data <-
rbind(
data_decrease_post,
data_decrease_pp,
data_decrease_ppc,
data_increase_post,
data_increase_pp,
data_increase_ppc
)
View(data)
targets::tar_make()
targets::tar_renv()
targets::tar_make()
targets::tar_make()
renv::install("here")
targets::tar_make()
targets::tar_visnetwork()
prior_meta <-
prior("student_t(3, 0.48, 0.05)", class = "Intercept")
ggplot() +
stat_function(
data = data.frame(x = c(-2, 2)),
aes(x),
fun = dstudent_t,
n = 101,
args = list(
df = 3,
mu = 0.48,
sigma = 0.05,
log = FALSE
),
color = "black"
) +
ylab("") +
scale_y_continuous(breaks = NULL) +
theme_classic()
get_prior(yi | se(1 / vi) ~ 1 + (1 | study / experiment / group / effect), data)
ggplot() +
stat_function(
data = data.frame(x = c(-2, 2)),
aes(x),
fun = dstudent_t,
n = 101,
args = list(
df = 3,
mu = 0.48,
sigma = 0.05,
log = FALSE
),
color = "black"
) +
geom_errorbarh(aes(xmin=0.38, xmax=0.58)) +
ylab("") +
scale_y_continuous(breaks = NULL) +
theme_classic()
ggplot() +
stat_function(
data = data.frame(x = c(-2, 2)),
aes(x),
fun = dstudent_t,
n = 101,
args = list(
df = 3,
mu = 0.48,
sigma = 0.05,
log = FALSE
),
color = "black"
) +
geom_errorbarh(aes(y=, 0, xmin=0.38, xmax=0.58)) +
ylab("") +
scale_y_continuous(breaks = NULL) +
theme_classic()
ggplot() +
stat_function(
data = data.frame(x = c(-2, 2)),
aes(x),
fun = dstudent_t,
n = 101,
args = list(
df = 3,
mu = 0.48,
sigma = 0.05,
log = FALSE
),
color = "black"
) +
geom_errorbarh(aes(y= 0, xmin=0.38, xmax=0.58)) +
ylab("") +
scale_y_continuous(breaks = NULL) +
theme_classic()
targets::tar_visnetwork()
targets::tar_make()
targets::tar_load(main_model)
plot(main_model)
pp_check(main_model)
main_model
pp_check(main_model)
pp_check(main_model)
pp_check(main_model, ndraws = 100)
targets::tar_visnetwork()
